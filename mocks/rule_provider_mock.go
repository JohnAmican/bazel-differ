// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/ewhauser/bazel-differ/internal (interfaces: RuleProvider)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	internal "github.com/ewhauser/bazel-differ/internal"
	gomock "github.com/golang/mock/gomock"
)

// MockRuleProvider is a mock of RuleProvider interface.
type MockRuleProvider struct {
	ctrl     *gomock.Controller
	recorder *MockRuleProviderMockRecorder
}

// MockRuleProviderMockRecorder is the mock recorder for MockRuleProvider.
type MockRuleProviderMockRecorder struct {
	mock *MockRuleProvider
}

// NewMockRuleProvider creates a new mock instance.
func NewMockRuleProvider(ctrl *gomock.Controller) *MockRuleProvider {
	mock := &MockRuleProvider{ctrl: ctrl}
	mock.recorder = &MockRuleProviderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRuleProvider) EXPECT() *MockRuleProviderMockRecorder {
	return m.recorder
}

// GetRule mocks base method.
func (m *MockRuleProvider) GetRule(arg0 *internal.Rule) internal.BazelRule {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetRule", arg0)
	ret0, _ := ret[0].(internal.BazelRule)
	return ret0
}

// GetRule indicates an expected call of GetRule.
func (mr *MockRuleProviderMockRecorder) GetRule(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetRule", reflect.TypeOf((*MockRuleProvider)(nil).GetRule), arg0)
}
